---
  name: Release

  on:
    pull_request:
    push:
      branches:
      - main

  concurrency:
    group: ${{ github.workflow }}-${{ github.ref }}
    cancel-in-progress: ${{ github.event_name == 'pull_request' }}

  jobs:
    release:
      name: Create Release
      runs-on: ubuntu-latest
      outputs:
        published: ${{ steps.release.outputs.published }}
        release-git-tag: ${{ steps.release.outputs.release-git-tag }}
      steps:
      - uses: actions/create-github-app-token@v1
        id: app-token
        with:
          app-id: ${{ vars.APP_ID }}
          private-key: ${{ secrets.PRIVATE_KEY }}
          owner: ${{ github.repository_owner }}
      - uses: actions/checkout@v4
        with:
          submodules: recursive
          token: ${{ steps.app-token.outputs.token }}
      - name: Release
        id: release
        uses: ahmadnassri/action-semantic-release@v2.2.8
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

    artifacts:
      needs: release
      name: Create Release Artifacts
      strategy:
        matrix:
          architecture: [{cpu: x86_64, docker: amd64},{cpu: aarch64, docker: arm64}]
          package_type: [apk, deb, rpm]
      runs-on: ubuntu-latest
      steps:
      - uses: actions/create-github-app-token@v1
        id: app-token
        with:
          app-id: ${{ vars.APP_ID }}
          private-key: ${{ secrets.PRIVATE_KEY }}
          owner: ${{ github.repository_owner }}
      - uses: actions/checkout@v4
        with:
          submodules: recursive
          token: ${{ steps.app-token.outputs.token }}
      - uses: docker/setup-qemu-action@v3
      - uses: docker/setup-buildx-action@v3
      - name: Set environment variables
        run: |
          grep -v '^#' .env >> $GITHUB_ENV
          echo "ARCHITECTURE=${{ matrix.architecture.cpu }}" >> $GITHUB_ENV
          echo "REGISTRY=ghcr.io" >> $GITHUB_ENV
          echo "PACKAGE_TYPE=${{ matrix.package_type }}" >> $GITHUB_ENV
      - name: Build and Package
        run: make package
      - name: Test the Package
        run: make package/test
      - name: Add Release Artifact to the Github Release
        if: ${{ needs.release.outputs.published == 'true' }}
        uses: softprops/action-gh-release@v2
        with:
          tag_name: ${{ needs.release.outputs.release-git-tag }}
          files: package/*

    done:
      needs: [release, artifacts]
      name: Done
      if: always()
      runs-on: ubuntu-latest
      steps:
      - name: Check for Failed Jobs
        run: |
          if [[ "${{ needs.release.result }}" == "failure" || "${{ needs.artifacts.result }}" == "failure" ]]; then
            echo "One or more jobs failed. Marking release as failed."
            exit 1
          else
            echo "All jobs succeeded or were skipped. Marking release as successful."
          fi
